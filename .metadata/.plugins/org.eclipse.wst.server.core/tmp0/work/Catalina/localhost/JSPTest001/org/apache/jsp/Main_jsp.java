/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M9
 * Generated at: 2019-12-18 05:38:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mysql.jdbc.log.Log;
import java.io.Console;
import java.text.*;
import java.sql.*;

public final class Main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.Console");
    _jspx_imports_classes.add("com.mysql.jdbc.log.Log");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Double Six</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 구글차트 디비 -->\r\n");
      out.write("<style>\r\n");


//이용자 정보 변수 받아오기 및 초기화
String id = (String)session.getAttribute("__id");
if(id==null){
	//response.sendRedirect("index.jsp");
	response.sendRedirect("index.jsp");
}
System.out.println(session.getAttribute("__id"));
int[] point = {0,0,0,0,0};
String[] name = new String[5];

//게시글 개수 변수
int pNum = 10;
int sNum = 10;
int [][] tno = new int[pNum][sNum];
String[][] title = new String[pNum][sNum];
String[][] tname = new String[pNum][sNum];
String[][] tdate = new String[pNum][sNum];
String[][] tcontent = new String[pNum][sNum];
int textNum = 1;
int lastNum = 0;
int pCount = 0;
int sCount = 0;

int [][] ftno = new int[pNum][sNum];
String[][] ftitle = new String[pNum][sNum];
String[][] ftname = new String[pNum][sNum];
String[][] ftdate = new String[pNum][sNum];
String[][] ftcontent = new String[pNum][sNum];



int i=0;
try{
	Class.forName("oracle.jdbc.driver.OracleDriver");//1.DB드라이버잡기
	System.out.println("JoinCheck 드라이버잡기");
	Connection conn = DriverManager.getConnection(
			"jdbc:oracle:thin:@127.0.0.1:1521:xe", "jsptest", "1234");//2.커넥션객체생성해서 커넥트
			System.out.println("조인체크 커넥트");
	Statement stmt = conn.createStatement();//3.커넥트 객체로 stmt 객체를 만든다
	System.out.println("statement");
	//회원정보 저장합니다.
	ResultSet rs=stmt.executeQuery("SELECT point,name FROM(SELECT point,name FROM userinfo ORDER BY point DESC) WHERE ROWNUM <= 5");
	System.out.println("sql문 통과");
	System.out.println("2차 시도");
	while(rs.next()) {
		
		point[i] = rs.getInt("point");
		System.out.println("getint 통과 : " + point[i]);

		name[i] = rs.getString("name");
		System.out.println("getString 통과 : " + name[i]);
		System.out.println(name[i]);
		i++;
	}
	
	//글의 개수 불러오고 내용을 배열변수에 등록
	rs = stmt.executeQuery("SELECT MAX(no) FROM textList");
	while(rs.next()){
		lastNum = rs.getInt(1);
	}
	rs = stmt.executeQuery("SELECT COUNT(no) FROM textList");
	while(rs.next()){
		textNum = rs.getInt(1);
	}
	//글번호 초기화
	for(int k = 0 ; k < 10 ; k++){
		for(int j = 0 ; j < 10 ; j++){
			tno[k][j] = 0;
		}
	}
	SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy");
	
	rs = stmt.executeQuery("SELECT * FROM textList ORDER BY no DESC");
	//제어용 변수 선언
	int k = 0;
	int j = 0;
	while(rs.next()){
		tno[k][j] = rs.getInt("no");
		tname[k][j] = rs.getString("userid");
		title[k][j] = rs.getString("title");
		tcontent[k][j] = rs.getString("content");
		tdate[k][j] = (rs.getString("data")).substring(0, 10);
		j++;
		if(j>=10){
			j = 0;
			k++;
		}
	}
	
	//자유게시판 글의 개수 불러오고 내용을 배열변수에 등록
	rs = stmt.executeQuery("SELECT MAX(no) FROM freeTextList");
	while(rs.next()){
		lastNum = rs.getInt(1);
	}
	rs = stmt.executeQuery("SELECT COUNT(no) FROM freeTextList");
	while(rs.next()){
		textNum = rs.getInt(1);
	}
	//글번호 초기화
	for(int q = 0 ; q < 10 ; q++){
		for(int r = 0 ; r< 10 ; r++){
			ftno[q][r] = 0;
		}
	}
	
	rs = stmt.executeQuery("SELECT * FROM freeTextList ORDER BY no DESC");
	
	
	
	//제어용 변수 선언
	int l = 0;
	int m = 0;
	while(rs.next()){
		ftno[l][m] = rs.getInt("no");
		ftname[l][m] = rs.getString("userid");
		ftitle[l][m] = rs.getString("title");
		ftcontent[l][m] = rs.getString("content");
		ftdate[l][m] = (rs.getString("data")).substring(0, 10);
		m++;		
		if(m>=10){
			m = 0;
			l++;
		}
	}
	
	
	
	}catch(Exception e){
	e.printStackTrace();
	}
	System.out.println("포인트를 불러오면 : "+point[0]+"//" + point[1] +"//"+point[2]+"//"+point[3]+"//" +point[4]);
	System.out.println("포인트를 불러오면 : "+name[0]+"//" + name[1] +"//"+name[2]+"//"+name[3]+"//" +name[4]);

      out.write("\r\n");
      out.write(".container1 {\r\n");
      out.write("\tdisplay: table;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 구글차트 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("google.charts.load('current', {packages: ['corechart', 'bar']});\r\n");
      out.write("google.charts.setOnLoadCallback(drawBasic);\r\n");
      out.write("function drawBasic() {\r\n");
      out.write("    var data = google.visualization.arrayToDataTable([\r\n");
      out.write("        ['Element', 'Density', { role: 'style' }],\r\n");
      out.write("        ['");
      out.print(name[0]);
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(point[0]);
      out.write(", '#F0D000'],            // RGB value\r\n");
      out.write("        ['");
      out.print(name[1]);
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(point[1]);
      out.write(", '#F0D000'],            // English color name\r\n");
      out.write("        ['");
      out.print(name[2]);
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(point[2]);
      out.write(", '#F0D000'],\r\n");
      out.write("        ['");
      out.print(name[3]);
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(point[3]);
      out.write(", '#F0D000'],\r\n");
      out.write("        ['");
      out.print(name[4]);
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(point[4]);
      out.write(", '#F0D000'], // CSS-style declaration\r\n");
      out.write("     ]);\r\n");
      out.write("    var options = {\r\n");
      out.write("            title: '우리사이트 포인트 랭킹 Top 5',\r\n");
      out.write("            legend : 'none',\r\n");
      out.write("            backgroundColor:'#000000', //배경색\r\n");
      out.write("            pointSize:5,\r\n");
      out.write("            titleTextStyle: { \r\n");
      out.write("                color: 'white' // 타이틀 색\r\n");
      out.write("            },\r\n");
      out.write("            hAxis:{  // 가로\r\n");
      out.write("                textStyle:{\r\n");
      out.write("                    fontSize:20,\r\n");
      out.write("                    color:'white'\r\n");
      out.write("                },\r\n");
      out.write("                baselineColor:'white' // 수직 왼쪽 선\r\n");
      out.write("            },\r\n");
      out.write("            vAxis:{ // 세로 \r\n");
      out.write("                textStyle:{\r\n");
      out.write("                    fontSize:20,\r\n");
      out.write("                    color:'white'\r\n");
      out.write("                },\r\n");
      out.write("                gridlines: { // 중간의 선\r\n");
      out.write("                    color: '#8898A1'\r\n");
      out.write("                },\r\n");
      out.write("                baselineColor:'8898A1' // 하단 선  \r\n");
      out.write("            },\r\n");
      out.write("            series: { // 선색\r\n");
      out.write("                0: {\r\n");
      out.write("                    color: '#F0A57C'\r\n");
      out.write("                },\r\n");
      out.write("                1: {\r\n");
      out.write("                    color: '#91FFC3'\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("      var chart = new google.visualization.ColumnChart(\r\n");
      out.write("        document.getElementById('char_one'));\r\n");
      out.write("      chart.draw(data, options);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 상단 이미지 칸입니다. 없애도 됩니다.  -->\r\n");
      out.write("<style>\r\n");
      out.write("\t.tiledBackground {\r\n");
      out.write("\t\tbackground-image: url(image/DoubleSixFooter.png);\r\n");
      out.write("\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\tbackground-position: center;\r\n");
      out.write("\t\twidth: 1902px;\r\n");
      out.write("\t\theight: 200px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- div 셋팅 -->\r\n");
      out.write("<style>\r\n");
      out.write("#leftad{\r\n");
      out.write("\twidth:10%;\r\n");
      out.write("\theight:auto;\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#middle{\r\n");
      out.write("\twidth:80%;\r\n");
      out.write("\theight:700px;\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#rightad{\r\n");
      out.write("\twidth:10%;\r\n");
      out.write("\theight:auto;\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 메인메뉴(nav)설정 -->\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("@import url(https://fonts.googleapis.com/css?family=Raleway);\r\n");
      out.write("\r\n");
      out.write("nav {\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  font-family: Raleway;\r\n");
      out.write("  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.5);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#nav-3 {\r\n");
      out.write("  background:#3399ff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".link-3 {\r\n");
      out.write("  transition: 0.4s;\r\n");
      out.write("  color: #ffffff;\r\n");
      out.write("  font-size: 30px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  padding: 0 10px;\r\n");
      out.write("  margin: 0 10px;\r\n");
      out.write("}\r\n");
      out.write(".link-3:hover {\r\n");
      out.write("  background-color: #ffffff;\r\n");
      out.write("  color: #668ee3;\r\n");
      out.write("  padding: 5px 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 순위 제목 -->\r\n");
      out.write("<style>\r\n");
      out.write("nav{\r\n");
      out.write("\tbackground: #2f3542;\r\n");
      out.write("\tborder-radius: 30px;\r\n");
      out.write("\tpadding: 1px;\r\n");
      out.write("}\r\n");
      out.write(".header__content {\r\n");
      out.write("\theight: 70px;\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("  color: white;\r\n");
      out.write("}\r\n");
      out.write(".header__title{\r\n");
      out.write("\tpadding: 10px 20px;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tfont-size: 40px;\r\n");
      out.write("\ttext-transform: uppercase;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 칸나눌때 쓰는 선을 대충 footer로 쓰고있습니다. padding이 선 두깨입니다. background가 색입니다.-->\r\n");
      out.write("<style>\r\n");
      out.write("footer{\r\n");
      out.write("\tclear: both;\r\n");
      out.write("\tbackground: #940038;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding: 0.5px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("table{\r\n");
      out.write("background: #ffffff;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 여기서 백그라운드를 바꾸면 배경 색이 모두 바뀝니다. -->\r\n");
      out.write("\t\t<body  onload=\"InitializeStaticMenu();\" style=\"overflow:auto; background:black\" >\r\n");
      out.write("\t\t<!--Google -Fonts-->\r\n");
      out.write("\t\t<link href='https://fonts.googleapis.com/css?family=Sintony:400,700&subset=latin-ext' rel='stylesheet' type='text/css'>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!--Font-awsome-->\r\n");
      out.write("\t\t<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container1\">\r\n");
      out.write("\t<header class=\"tiledBackground\"></header>\t\r\n");
      out.write("\t<nav id=\"nav-3\">\r\n");
      out.write("\t\t<a class=\"link-3\" href=\"QuizMain.jsp?\">포인트퀴즈</a>\r\n");
      out.write("\t\t<a class=\"link-3\" href=\"GameMain.jsp?\">포인트게임</a>\r\n");
      out.write("\t\t<a class=\"link-3\" href=\"MainTextList.jsp?\">게시판</a>\r\n");
      out.write("\t\t<a class=\"link-3\" href=\"Profile.jsp\">MyProfile</a>\r\n");
      out.write("\t\t<a class=\"link-3\" href=\"Logout.jsp\">로그아웃</a>\r\n");
      out.write("\t</nav>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"bottom\" style=\" height:auto;  width: 100%;\">\r\n");
      out.write("\t<div id=\"leftad\">\r\n");
      out.write("\t\t<footer class=\"footer\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<p>\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"middle\">\r\n");
      out.write("\t\t<header class=\"header\">\r\n");
      out.write("\t\t\t<nav class=\"header__content\">\r\n");
      out.write("\t\t\t\t<a class=\"header__title\">순위</a>\r\n");
      out.write("\t\t\t</nav>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t\t<p><p>\r\n");
      out.write("\t\t<!--차트 그리기-->\r\n");
      out.write("\t\t<div id=\"char_one\"></div>\r\n");
      out.write("\t\t<p><p>\r\n");
      out.write("\t\t<!-- 그냥 선그리기 대신 -->\r\n");
      out.write("\t\t<footer class=\"footer\"></footer>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t<div style=\"overflow:auto; background:#99ff99; border-radius: 10px;\">\r\n");
      out.write("\t\t\t<center><h2>공지사항</h2></center>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t\t<thead align=\"center\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th align=\"center\">글 번호</th>\r\n");
      out.write("\t\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t\t<th>작성자 이름</th>\r\n");
      out.write("\t\t\t\t\t\t<th>작성 날짜</th>                \r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tbody align=\"center\">\r\n");
      out.write("    ");

    int pageNum = 1;
    for(i = 0 ; i < 3 ; i++){
    	if(title[pageNum-1][i]!=null){
    		out.print("<tr>");
    		out.print("<td>" + tno[pageNum-1][i] + "</td>");
    		out.print("<td><a href='ReadText.jsp?_tno=" + tno[pageNum-1][i] + "&_type=1'>" + title[pageNum-1][i] + "</a></td>");
    		out.print("<td>" + tname[pageNum-1][i] + "</td>");
    		out.print("<td>" + tdate[pageNum-1][i] + "</td>");
    		out.print("</tr>");
    	}
    }
    
      out.write("      \r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 그냥 선그리기 대신 --><p><p>\r\n");
      out.write("\t\t<footer class=\"footer\"></footer><p><p>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div style=\"overflow:auto; background:#99ff99; border-radius: 10px;\">\r\n");
      out.write("\t\t<center><h2>자유게시판</h2></center>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t<thead align=\"center\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th align=\"center\">글 번호</th>\r\n");
      out.write("\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t<th>작성자 이름</th>\r\n");
      out.write("\t\t\t\t\t<th>작성 날짜</th>                \r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody align=\"center\">\r\n");
      out.write("    ");

    pageNum = 1;
    for(i = 0 ; i < 3 ; i++){
    	if(title[pageNum-1][i]!=null){
    		out.print("<tr>");
    		out.print("<td>" + ftno[pageNum-1][i] + "</td>");
    		out.print("<td><a href='ReadTextFree.jsp?_tno=" + ftno[pageNum-1][i] + "&_type=1'>" + ftitle[pageNum-1][i] + "</a></td>");
    		out.print("<td>" + ftname[pageNum-1][i] + "</td>");
    		out.print("<td>" + ftdate[pageNum-1][i] + "</td>");
    		out.print("</tr>");
    	}
    }
    
      out.write("       \r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 그냥 선그리기 대신 -->\r\n");
      out.write("\t\t<p><p>\r\n");
      out.write("\t\t<footer class=\"footer\"></footer>\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"rightad\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 그냥 선그리기 대신 -->\r\n");
      out.write("\t\t<footer class=\"footer\">\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
